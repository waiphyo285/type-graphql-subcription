"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_1 = require("./internal/data");
const utils_1 = require("./internal/utils");
// Note: Documentation for the hooks can't be added without adding it to *every* overload
const hooks = {
    pre(...args) {
        return (target) => addToHooks(utils_1.getName(target), 'pre', args);
    },
    post(...args) {
        return (target) => addToHooks(utils_1.getName(target), 'post', args);
    }
};
/**
 * Add a hook to the hooks Array
 * @param name With wich name should they be registered
 * @param hookType What type is it
 * @param args All Arguments, that should be passed-throught
 */
function addToHooks(name, hookType, args) {
    if (!data_1.hooks.has(name)) {
        data_1.hooks.set(name, {
            post: [],
            pre: []
        });
    }
    // Convert Method to array if only a string is provided
    const methods = Array.isArray(args[0]) ? args[0] : [args[0]];
    if (typeof args[1] !== 'function') {
        throw new TypeError(`"${name}.${hookType}.${methods.join(' ')}"'s function is not a function!`);
    }
    const func = args[1];
    for (const method of methods) {
        switch (hookType) {
            case 'post':
                data_1.hooks.get(name).post.push({ method, func });
                break;
            case 'pre':
                data_1.hooks.get(name).pre.push({ method, func });
                break;
        }
    }
}
exports.pre = hooks.pre;
exports.post = hooks.post;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9va3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaG9va3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSwwQ0FBNkQ7QUFDN0QsNENBQTJDO0FBc0UzQyx5RkFBeUY7QUFDekYsTUFBTSxLQUFLLEdBQVU7SUFDbkIsR0FBRyxDQUFDLEdBQUcsSUFBSTtRQUNULE9BQU8sQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFDRCxJQUFJLENBQUMsR0FBRyxJQUFJO1FBQ1YsT0FBTyxDQUFDLE1BQVcsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNGLENBQUM7QUFFRjs7Ozs7R0FLRztBQUNILFNBQVMsVUFBVSxDQUFDLElBQVksRUFBRSxRQUF3QixFQUFFLElBQVc7SUFDckUsSUFBSSxDQUFDLFlBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDeEIsWUFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUU7WUFDbEIsSUFBSSxFQUFFLEVBQUU7WUFDUixHQUFHLEVBQUUsRUFBRTtTQUNFLENBQUMsQ0FBQztLQUNkO0lBRUQsdURBQXVEO0lBQ3ZELE1BQU0sT0FBTyxHQUFVLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwRSxJQUFJLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLFVBQVUsRUFBRTtRQUNqQyxNQUFNLElBQUksU0FBUyxDQUFDLElBQUksSUFBSSxJQUFJLFFBQVEsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0tBQ2pHO0lBQ0QsTUFBTSxJQUFJLEdBQWdCLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVsQyxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtRQUM1QixRQUFRLFFBQVEsRUFBRTtZQUNoQixLQUFLLE1BQU07Z0JBQ1QsWUFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Z0JBQ2hELE1BQU07WUFDUixLQUFLLEtBQUs7Z0JBQ1IsWUFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Z0JBQy9DLE1BQU07U0FDVDtLQUNGO0FBQ0gsQ0FBQztBQUVZLFFBQUEsR0FBRyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUM7QUFDaEIsUUFBQSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyJ9