"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const data_1 = require("./internal/data");
const logSettings_1 = require("./logSettings");
const types_1 = require("./types");
/**
 * Set Typegoose's global Options
 */
function setGlobalOptions(options) {
    if (typeof options !== 'object') {
        throw new TypeError('"options" argument needs to be an object!');
    }
    logSettings_1.logger.info('"setGlobalOptions" got called with', options);
    for (const key of Object.keys(options)) {
        data_1.globalOptions[key] = Object.assign({}, data_1.globalOptions[key], options[key]);
    }
    logSettings_1.logger.info('new Global Options:', options);
}
exports.setGlobalOptions = setGlobalOptions;
/**
 * Parse Typegoose Environment Variables and apply them
 */
function parseENV() {
    var _a;
    logSettings_1.logger.info('"parseENV" got called');
    if (((_a = process.env.TG_USE_NEW_ENUM) === null || _a === void 0 ? void 0 : _a.length) > 0) {
        logSettings_1.logger.warn('TG_USE_NEW_ENUM & useNewEnum got deprecated, see changelog 6.2 for more');
    }
    const options = {
        globalOptions: {},
        options: {
            allowMixed: process.env.TG_ALLOW_MIXED in types_1.Severity ? mapValueToSeverity(process.env.TG_ALLOW_MIXED) : data_1.globalOptions.options.allowMixed
        }
    };
    setGlobalOptions(options);
}
exports.parseENV = parseENV;
/**
 * Maps strings to the number
 * -> This function is specifically build for "Severity"-Enum
 * @throws {Error} if not in range of the "Severity"-Enum
 * @example
 * ```ts
 * mapValueToSeverity("WARN") === 1
 * mapValueToSeverity("1") === 1
 * // now internal use
 * mapValueToSeverity(1) === 1
 * ```
 * @param value The value to check for
 */
function mapValueToSeverity(value) {
    if (!(value in types_1.Severity)) {
        throw new Error(`"value" is not in range of "Severity"! (got: ${value})`);
    }
    if (typeof value === 'number') {
        return value;
    }
    return mapValueToSeverity(types_1.Severity[value]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsT3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxPcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQWdEO0FBQ2hELCtDQUF1QztBQUN2QyxtQ0FBbUQ7QUFFbkQ7O0dBRUc7QUFDSCxTQUFnQixnQkFBZ0IsQ0FBQyxPQUF1QjtJQUN0RCxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtRQUMvQixNQUFNLElBQUksU0FBUyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7S0FDbEU7SUFFRCxvQkFBTSxDQUFDLElBQUksQ0FBQyxvQ0FBb0MsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUUzRCxLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdEMsb0JBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxvQkFBYSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQzFFO0lBRUQsb0JBQU0sQ0FBQyxJQUFJLENBQUMscUJBQXFCLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQVpELDRDQVlDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQixRQUFROztJQUN0QixvQkFBTSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBRXJDLElBQUksT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsMENBQUUsTUFBTSxJQUFHLENBQUMsRUFBRTtRQUMzQyxvQkFBTSxDQUFDLElBQUksQ0FBQyx5RUFBeUUsQ0FBQyxDQUFDO0tBQ3hGO0lBRUQsTUFBTSxPQUFPLEdBQW1CO1FBQzlCLGFBQWEsRUFBRSxFQUFFO1FBQ2pCLE9BQU8sRUFBRTtZQUNQLFVBQVUsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxnQkFBUSxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQkFBYSxDQUFDLE9BQU8sQ0FBQyxVQUFVO1NBQ3ZJO0tBQ0YsQ0FBQztJQUVGLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFmRCw0QkFlQztBQUVEOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILFNBQVMsa0JBQWtCLENBQUMsS0FBc0I7SUFDaEQsSUFBSSxDQUFDLENBQUMsS0FBSyxJQUFJLGdCQUFRLENBQUMsRUFBRTtRQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLGdEQUFnRCxLQUFLLEdBQUcsQ0FBQyxDQUFDO0tBQzNFO0lBQ0QsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDN0IsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE9BQU8sa0JBQWtCLENBQUMsZ0JBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzdDLENBQUMifQ==