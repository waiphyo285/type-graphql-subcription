import { Model, Schema, SchemaDefinition } from 'mongoose';
import { IGlobalOptions, VirtualOptions } from '../types';
export interface IPreHook {
    method: string | RegExp;
    func(error?: Error): void;
}
export interface IPostHook {
    method: string | RegExp;
    func(): void;
}
export interface IHooks {
    pre: IPreHook[];
    post: IPostHook[];
}
export interface IPluginMap {
    mongoosePlugin(schema: Schema<any>, options: object): void;
    options: any;
}
/** Schema Map */
export declare const schemas: Map<string, SchemaDefinition>;
/** Models Map */
export declare const models: Map<string, Model<any>>;
/** Virtuals Map */
export declare const virtuals: Map<string, Map<string, VirtualOptions>>;
/** Hooks Map */
export declare const hooks: Map<string, IHooks>;
/** Plugins Map */
export declare const plugins: Map<string, IPluginMap[]>;
/** Constructors Map */
export declare const constructors: Map<string, NewableFunction>;
/** Global Options */
export declare const globalOptions: IGlobalOptions;
